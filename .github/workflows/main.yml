name: CI Workflow

on:
  pull_request:
    branches: [develop]

  workflow_dispatch:

  push:

jobs:
  python-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
      - name: Set up python
        id: setup-python
        uses: actions/setup-python@v2
        with:
          python-version: 3.10
      #----------------------------------------------
      #  -----  install & configure poetry  -----
      #----------------------------------------------
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      #----------------------------------------------
      #       load cached venv if cache exists
      #----------------------------------------------
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
      #----------------------------------------------
      # install dependencies if cache does not exist
      #----------------------------------------------
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root
      - name: Run migrations
        run: python project/manage.py migrate
      - name: Run tests
        env:
          CIVIWIKI_LOCAL_NAME: True
          DJANGO_SETTINGS_MODULE: core.settings
        run: |
          cd project
          pytest -p no:warning
      - name: Lint
        uses: py-actions/flake8@v1
        with:
          ignore: "E203,W503"
          max-line-length: "88"
          exclude: "**/migrations/*.py"
